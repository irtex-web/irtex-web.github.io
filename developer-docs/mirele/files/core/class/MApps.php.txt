<?php

/**
 * Class MApps
 * Class for working with Mirele.
 * Mirele applications are like WordPress plugins,
 * only built into the distribution
 *
 * @author: Mirele
 * @version: 1.0.0
 * @package: Mirele
 */

class MApps {

    private $apps = array();

    public function register ($app_id='default', $function=null, $meta=array()) {

        if (!isset($this->apps[$app_id])) {
            return $this->apps[$app_id] = (object) array(
                'app_id' => $app_id,
                'function' => $function,
                'meta' => is_array($meta) ? (object) $meta : (object) array()
            );
        } else {
            return false;
        }

    }

    public function app ($app_id='default') {

        if (isset($this->apps[$app_id]) and isset($this->apps[$app_id]->function) and is_callable($this->apps[$app_id]->function)) {

            global $mrouter;

            if ($mrouter->exists("app_$app_id")) {
                $mrouter->execute("app_$app_id");
            }

            call_user_func($this->apps[$app_id]->function);

            return true;

        }else{
            return false;
        }

    }

    public function all () {

        if (!empty($this->apps)) {
            return $this->apps;
        } else {
            return false;
        }

    }

    public function app_exists ($app_id='default') {
        return isset($this->apps[$app_id]);
    }

}
