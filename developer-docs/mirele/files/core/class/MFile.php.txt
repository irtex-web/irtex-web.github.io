<?php

/**
 * Class MFile
 * Class for working with Wordpress file system.
 * It can be used as a class for working with files
 * (writing, reading, adding a new line, deleting)
 *
 * @author: Mirele
 * @version: 1.0.0
 * @package: Mirele
 */

class MFile
{

    static function write ($file='', $content='') {

        $file = self::getPath() . $file;

        if (file_exists($file) and is_writable($file)) {

            $fp = fopen($file, 'w');

            flock($fp, LOCK_EX);
            fwrite($fp, $content);
            flock($fp, LOCK_UN);
            fclose($fp);

            return true;

        } elseif (!file_exists($file)) {

            $fp = fopen($file, 'w+');
            fwrite($fp, $content);
            fclose($fp);

            return true;

        } else {

            return false;

        }

    }

    static function append ($file='', $content='') {

        $file = self::getPath() . $file;

        if (file_exists($file) and is_writable($file)) {

            $fp = fopen($file, 'a');

            flock($fp, LOCK_EX);
            fwrite($fp, $content);
            flock($fp, LOCK_UN);
            fclose($fp);

            return true;

        } elseif (!file_exists($file)) {

            $fp = fopen($file, 'a+');
            fwrite($fp, $content);
            fclose($fp);

            return true;

        } else {

            return false;

        }

    }

    static function read ($file='') {

        $file = self::getPath() . $file;

        if (file_exists($file) and is_readable($file)) {

            $fp = fopen($file, "r");
            $contents = fread($fp, filesize($file));
            fclose($fp);

            return $contents;

        } else {
            return false;
        }

    }

    static function delete ($file='') {

        $file = self::getPath() . $file;

        if (file_exists($file)) {
            return unlink($file);
        } else {
            return false;
        }


    }

    static function exist ($file='') {

        return file_exists(self::getPath() . $file);

    }

    static function size ($file='') {

        $file = self::getPath() . $file;

        if (file_exists($file)) {
            return filesize($file);
        } else {
            return false;
        }

    }

    static public function getPath ()
    {
        return '';
    }

}
